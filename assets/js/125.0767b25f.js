(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{734:function(a,t,s){"use strict";s.r(t);var e=s(0),i=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"address-derivation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#address-derivation"}},[a._v("#")]),a._v(" Address Derivation")]),a._v(" "),s("p",[a._v('A Vite address is a 55-character string with three parts: First, the "vite_" prefix; second, a 160-bit BLAKE2b hashed public key of Ed25519 cryptographic elliptic curve from a seed; and third, a 40-bit checksum of the public key\'s hash. Note that the second and third parts are in Hex encoding.')]),a._v(" "),s("p",{staticClass:"katex-block"},[s("span",{staticClass:"katex-display"},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[s("semantics",[s("mrow",[s("mi",[a._v("A")]),s("mi",[a._v("d")]),s("mi",[a._v("d")]),s("mi",[a._v("r")]),s("mi",[a._v("e")]),s("mi",[a._v("s")]),s("mi",[a._v("s")]),s("mo",[a._v("=")]),s("mi",[a._v("v")]),s("mi",[a._v("i")]),s("mi",[a._v("t")]),s("mi",[a._v("e")]),s("mi",{attrs:{mathvariant:"normal"}},[a._v("_")]),s("mo",[a._v("+")]),s("mi",[a._v("H")]),s("mi",[a._v("e")]),s("mi",[a._v("x")]),s("mo",{attrs:{stretchy:"false"}},[a._v("(")]),s("mi",[a._v("P")]),s("mi",[a._v("u")]),s("mi",[a._v("b")]),s("mi",[a._v("H")]),s("mi",[a._v("a")]),s("mi",[a._v("s")]),s("mi",[a._v("h")]),s("mo",[a._v("+")]),s("mi",[a._v("C")]),s("mi",[a._v("h")]),s("mi",[a._v("e")]),s("mi",[a._v("c")]),s("mi",[a._v("k")]),s("mi",[a._v("s")]),s("mi",[a._v("u")]),s("mi",[a._v("m")]),s("mo",{attrs:{stretchy:"false"}},[a._v("(")]),s("mi",[a._v("P")]),s("mi",[a._v("u")]),s("mi",[a._v("b")]),s("mi",[a._v("H")]),s("mi",[a._v("a")]),s("mi",[a._v("s")]),s("mi",[a._v("h")]),s("mo",{attrs:{stretchy:"false"}},[a._v(")")]),s("mo",{attrs:{stretchy:"false"}},[a._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("Address = vite\\_ + Hex(PubHash + Checksum(PubHash))\n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[a._v("A")]),s("span",{staticClass:"mord mathnormal"},[a._v("d")]),s("span",{staticClass:"mord mathnormal"},[a._v("d")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[a._v("r")]),s("span",{staticClass:"mord mathnormal"},[a._v("e")]),s("span",{staticClass:"mord mathnormal"},[a._v("s")]),s("span",{staticClass:"mord mathnormal"},[a._v("s")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[a._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.9695199999999999em","vertical-align":"-0.31em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[a._v("v")]),s("span",{staticClass:"mord mathnormal"},[a._v("i")]),s("span",{staticClass:"mord mathnormal"},[a._v("t")]),s("span",{staticClass:"mord mathnormal"},[a._v("e")]),s("span",{staticClass:"mord",staticStyle:{"margin-right":"0.02778em"}},[a._v("_")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[a._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.08125em"}},[a._v("H")]),s("span",{staticClass:"mord mathnormal"},[a._v("e")]),s("span",{staticClass:"mord mathnormal"},[a._v("x")]),s("span",{staticClass:"mopen"},[a._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[a._v("P")]),s("span",{staticClass:"mord mathnormal"},[a._v("u")]),s("span",{staticClass:"mord mathnormal"},[a._v("b")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.08125em"}},[a._v("H")]),s("span",{staticClass:"mord mathnormal"},[a._v("a")]),s("span",{staticClass:"mord mathnormal"},[a._v("s")]),s("span",{staticClass:"mord mathnormal"},[a._v("h")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[a._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[a._v("C")]),s("span",{staticClass:"mord mathnormal"},[a._v("h")]),s("span",{staticClass:"mord mathnormal"},[a._v("e")]),s("span",{staticClass:"mord mathnormal"},[a._v("c")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03148em"}},[a._v("k")]),s("span",{staticClass:"mord mathnormal"},[a._v("s")]),s("span",{staticClass:"mord mathnormal"},[a._v("u")]),s("span",{staticClass:"mord mathnormal"},[a._v("m")]),s("span",{staticClass:"mopen"},[a._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[a._v("P")]),s("span",{staticClass:"mord mathnormal"},[a._v("u")]),s("span",{staticClass:"mord mathnormal"},[a._v("b")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.08125em"}},[a._v("H")]),s("span",{staticClass:"mord mathnormal"},[a._v("a")]),s("span",{staticClass:"mord mathnormal"},[a._v("s")]),s("span",{staticClass:"mord mathnormal"},[a._v("h")]),s("span",{staticClass:"mclose"},[a._v(")")]),s("span",{staticClass:"mclose"},[a._v(")")])])])])])]),a._v(" "),s("p",[a._v("The public/private keypair is derived in the following steps.")]),a._v(" "),s("ul",[s("li",[a._v("Generate a random BIP-39 encoded 128/256 bits entropy with 12/24 mnemonic phrase.")]),a._v(" "),s("li",[a._v("Generate a BIP-39 seed from the mnemonic phrase, with an optional passphrase (default is empty).")]),a._v(" "),s("li",[a._v('Generate the master key from the HMAC-SHA512 hashed seed, using key "ed25519 blake2b seed".')]),a._v(" "),s("li",[a._v("Derive the BIP-44 Ed25519-BLAKE2b keypair from the master key with coin_type "),s("strong",[a._v("666666")]),a._v(".")])]),a._v(" "),s("blockquote",[s("p",[a._v("We modified the Ed25519 signature scheme to use BLAKE2b instead of SHA-2.")])]),a._v(" "),s("h3",{attrs:{id:"derivation-path"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#derivation-path"}},[a._v("#")]),a._v(" Derivation Path")]),a._v(" "),s("p",[a._v("See "),s("a",{attrs:{href:"https://docs.vite.org/vite-docs/vep/vep-3.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("VEP 3: Vite Wallet Key Derivation"),s("OutboundLink")],1),a._v(" for more information about the BIP-32 path pattern of Vite.")]),a._v(" "),s("h3",{attrs:{id:"original-address"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#original-address"}},[a._v("#")]),a._v(" Original Address")]),a._v(" "),s("p",[a._v("We concatenate the 20-byte binary address and an additional 1-byte type flag into the 21-byte "),s("strong",[a._v("Original Address")]),a._v(" to determine if an address is a smart contract. See "),s("a",{attrs:{href:""}},[a._v("VEP-16: Specification of Address Generation")]),a._v(" for details.")]),a._v(" "),s("h2",{attrs:{id:"key-derivation-function-and-keystore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-derivation-function-and-keystore"}},[a._v("#")]),a._v(" Key Derivation Function and Keystore")]),a._v(" "),s("p",[a._v("Key Derivation Function (KDF) derives subkeys from a single master key. The derivation process expands a short string into certain formats via KDF algorithms. KDF is similar to a hash function, but the former involves adding random variables to prevent table-lookup attacks (e.g. rainbow tables). For private key encryption and keystore generation, Vite uses Scrypt, a memory-dependent KDF. Brute-force attacks on KDF are nearly impossible to succeed, as they will consume prohibitive amount of memory.")]),a._v(" "),s("p",[a._v("On Vite, the private key is encrypted and stored in the keystore in the following steps:")]),a._v(" "),s("ul",[s("li",[a._v("Encrypt a random keystore/wallet password entered by the user through Scrypt to get a 256bits AES-256-GCM encryption key.")]),a._v(" "),s("li",[a._v("Generate the keystore with derived Scrypt parameters.")]),a._v(" "),s("li",[a._v("Save the AES-256-GCM encrypted private key into the keystore file.")])])])}),[],!1,null,null,null);t.default=i.exports}}]);