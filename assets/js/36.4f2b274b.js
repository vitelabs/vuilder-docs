(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{572:function(t,e,l){t.exports=l.p+"assets/img/common-patterns-01.32fea701.png"},703:function(t,e,l){"use strict";l.r(e);var c=l(0),a=Object(c.a)({},(function(){var t=this,e=t.$createElement,c=t._self._c||e;return c("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[c("h1",{attrs:{id:"common-patterns"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#common-patterns"}},[t._v("#")]),t._v(" Common Patterns")]),t._v(" "),c("p",[t._v("In this chapter, we will cover the common patterns of Vite smart contract development with an example.")]),t._v(" "),c("h2",{attrs:{id:"a-well-structured-vite-smart-contract"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#a-well-structured-vite-smart-contract"}},[t._v("#")]),t._v(" A Well-Structured Vite Smart Contract")]),t._v(" "),c("p",[t._v("The following contract comes from a collateral vault that accepts Vite coins, and in turn, mints a stablecoin VUSD.")]),t._v(" "),c("tm-code-block",{staticClass:"codeblock",attrs:{language:"solidity",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHlwcCAmZ3Q7PTAuOC4wOwpwcmFnbWEgZXhwZXJpbWVudGFsIEF3YWl0OwoKaW1wb3J0ICZxdW90Oy4vaW50ZXJmYWNlL1ZhdWx0LnNvbHBwJnF1b3Q7OwppbXBvcnQgJnF1b3Q7Li9pbnRlcmZhY2UvSVRva2VuTWludGVyLnNvbHBwJnF1b3Q7OwppbXBvcnQgJnF1b3Q7Li9pbnRlcmZhY2UvSU9yYWNsZS5zb2xwcCZxdW90OzsKaW1wb3J0ICZxdW90Oy4uL29wZW56ZXBwZWxpbi9hY2Nlc3MvT3duYWJsZS5zb2wmcXVvdDs7Cgpjb250cmFjdCBDb2xsYXRlcmFsVmF1bHQgaXMgVmF1bHQsIE93bmFibGUgewoKICAgIHZpdGV0b2tlbiBjb25zdGFudCBWSVRFX1RPS0VOID0gJnF1b3Q7dHRpXzU2NDk1NDQ1MjA1NDRmNGI0NTRlNmU0MCZxdW90OzsKICAgIHVpbnQ4IGNvbnN0YW50IFZJVEVfREVDSU1BTFMgPSAxODsKICAgIHZpdGV0b2tlbiBjb25zdGFudCBTVEFCTEVfVE9LRU4gPSAmcXVvdDt0dGlfODBmMzc1MTQ4NWU0ZTgzNDU2MDU5NDczJnF1b3Q7OwogICAgdWludDggY29uc3RhbnQgVlVTRF9ERUNJTUFMUyA9IDY7CgogICAgSU9yYWNsZSBvcmFjbGU7CiAgICAvLyB0aGUgYnVpbHQtaW4gdG9rZW4gaXNzdWFuY2UgY29udHJhY3QKICAgIElUb2tlbk1pbnRlciB0bSA9IElUb2tlbk1pbnRlcigmcXVvdDt2aXRlXzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDU5NTI5MmQ5OTZkJnF1b3Q7KTsKCiAgICAvLy8gQHBhcmFtIF9vcmFjbGVBZGRyZXNzIFRoZSBwcmljZSBvcmFjbGUgY29udHJhY3QKICAgIC8vLyBAcGFyYW0gX3RtQWRkcmVzcyBUaGUgdG9rZW4gbWFuYWdlciBjb250cmFjdAogICAgY29uc3RydWN0b3IoYWRkcmVzcyBfb3JhY2xlQWRkcmVzcywgYWRkcmVzcyBfdG1BZGRyZXNzKSBwYXlhYmxlIHsKICAgICAgICBjb2xsYXRlcmFsVG9rZW4gPSBWSVRFX1RPS0VOOwogICAgICAgIHN0YWJsZVRva2VuID0gU1RBQkxFX1RPS0VOOwogICAgICAgIG9yYWNsZSA9IElPcmFjbGUoX29yYWNsZUFkZHJlc3MpOwogICAgICAgIGlmIChfdG1BZGRyZXNzICE9IGFkZHJlc3MoMCkpIHsKICAgICAgICAgICAgdG0gPSBJVG9rZW5NaW50ZXIoX3RtQWRkcmVzcyk7CiAgICAgICAgfQogICAgfQoKICAgIC8vLyBAbm90aWNlIEFsbG93cyB0aGUgb3duZXIgdG8gc2V0IGEgbmV3IG9yYWNsZQogICAgLy8vIEBwYXJhbSBfb3JhY2xlQWRkcmVzcyBUaGUgbmV3IHByaWNlIG9yYWNsZSBjb250cmFjdCB0byBiZSBzZXQKICAgIGZ1bmN0aW9uIHNldE9yYWNsZShhZGRyZXNzIF9vcmFjbGVBZGRyZXNzKSBwdWJsaWMgb25seU93bmVyIHsKICAgICAgICBvcmFjbGUgPSBJT3JhY2xlKF9vcmFjbGVBZGRyZXNzKTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBBbGxvd3MgdGhlIG93bmVyIHRvIHNldCBhIG5ldyB0b2tlbiBtaW50ZXIKICAgIC8vLyBAcGFyYW0gX3RtQWRkcmVzcyBUaGUgbmV3IHRva2VuIG1pbnRlciBjb250cmFjdCB0byBiZSBzZXQKICAgIGZ1bmN0aW9uIHNldFRva2VuTWludGVyKGFkZHJlc3MgX3RtQWRkcmVzcykgcHVibGljIG9ubHlPd25lciB7CiAgICAgICAgdG0gPSBJVG9rZW5NaW50ZXIoX3RtQWRkcmVzcyk7CiAgICB9CgogICAgLy8vIEBub3RpY2UgQWxsb3dzIGEgdXNlciB0byBkZXBvc2l0IFZJVEUgaW4gZXhjaGFuZ2UgZm9yIHNvbWUgYW1vdW50IG9mIFZVU0QKICAgIC8vLyBAcGFyYW0gX2RlcG9zaXRBbW91bnQgIFRoZSBhbW91bnQgb2YgVklURSB0aGUgdXNlciBzZW50IGluIHRoZSB0cmFuc2FjdGlvbgogICAgZnVuY3Rpb24gZGVwb3NpdCh1aW50MjU2IF9kZXBvc2l0QW1vdW50KSBvdmVycmlkZSBwYXlhYmxlIGV4dGVybmFsIHsKICAgICAgICByZXF1aXJlKFZJVEVfVE9LRU4gPT0gbXNnLnRva2VuLCAmcXVvdDtpbmNvcnJlY3QgZGVwb3NpdCB0b2tlbiZxdW90Oyk7CiAgICAgICAgcmVxdWlyZShfZGVwb3NpdEFtb3VudCA9PSBtc2cudmFsdWUsICZxdW90O2luY29ycmVjdCBkZXBvc2l0IGFtb3VudCZxdW90Oyk7CgogICAgICAgIHZhdWx0c1ttc2cuc2VuZGVyXS5jb2xsYXRlcmFsQW1vdW50ICs9IF9kZXBvc2l0QW1vdW50OwogICAgICAgIC8vIGVzdGltYXRlIG1pbnQgYW1vdW50CiAgICAgICAgdWludDI1NiBhbW91bnRUb01pbnQgPSBnZXRNaW50QW1vdW50KF9kZXBvc2l0QW1vdW50KTsKICAgICAgICAvLyBtaW50IHN0YWJsZSBjb2lucywgdGhlIG1pbnRlZCB0b2tlbiB3aWxsIGJlIHNlbnQgdG8gbXNnLnNlbmRlcgogICAgICAgIGF3YWl0IHRtLlJlSXNzdWUoU1RBQkxFX1RPS0VOLCBhbW91bnRUb01pbnQsIHBheWFibGUobXNnLnNlbmRlcikpOwogICAgICAgIHZhdWx0c1ttc2cuc2VuZGVyXS5kZWJ0QW1vdW50ICs9IGFtb3VudFRvTWludDsKCiAgICAgICAgZW1pdCBEZXBvc2l0KF9kZXBvc2l0QW1vdW50LCBhbW91bnRUb01pbnQpOwogICAgfQogICAgCiAgICAvLy8gQG5vdGljZSBBbGxvd3MgYSB1c2VyIHRvIHdpdGhkcmF3IHVwIHRvIDEwMCUgb2YgdGhlIFZJVEUgY29sbGF0ZXJhbCB0aGV5IGhhdmUgb24gZGVwb3NpdAogICAgLy8vIEBwYXJhbSBfcmVwYXlBbW91bnQgIHRoZSBhbW91bnQgb2YgVlVTRCB0aGF0IGEgdXNlciBpcyByZXBheWluZyB0byByZWRlZW0gdGhlaXIgY29sbGF0ZXJhbCBmb3IuCiAgICBmdW5jdGlvbiB3aXRoZHJhdyh1aW50MjU2IF9yZXBheUFtb3VudCkgb3ZlcnJpZGUgcGF5YWJsZSBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShTVEFCTEVfVE9LRU4gPT0gbXNnLnRva2VuLCAmcXVvdDtpbmNvcnJlY3QgcmVwYXkgdG9rZW4mcXVvdDspOwogICAgICAgIHJlcXVpcmUoX3JlcGF5QW1vdW50ID09IG1zZy52YWx1ZSwgJnF1b3Q7aW5jb3JyZWN0IHJlcGF5IGFtb3VudCZxdW90Oyk7CiAgICAgICAgcmVxdWlyZShfcmVwYXlBbW91bnQgJmx0Oz0gdmF1bHRzW21zZy5zZW5kZXJdLmRlYnRBbW91bnQsICZxdW90O3dpdGhkcmF3IGxpbWl0IGV4Y2VlZGVkJnF1b3Q7KTsgCgogICAgICAgIHZhdWx0c1ttc2cuc2VuZGVyXS5kZWJ0QW1vdW50IC09IF9yZXBheUFtb3VudDsKICAgICAgICAvLyBlc3RpbWF0ZSB3aXRoZHJhdyBhbW91bnQKICAgICAgICB1aW50MjU2IGFtb3VudFRvV2l0aGRyYXcgPSAgZ2V0V2l0aGRyYXdBbW91bnQoX3JlcGF5QW1vdW50KTsKICAgICAgICAvLyBidXJuIHJlcGFpZCBzdGFibGUgY29pbnMKICAgICAgICBhd2FpdCB0bS5CdXJue3Rva2VuOiBTVEFCTEVfVE9LRU4sIHZhbHVlOiBfcmVwYXlBbW91bnR9KCk7CiAgICAgICAgdmF1bHRzW21zZy5zZW5kZXJdLmNvbGxhdGVyYWxBbW91bnQgLT0gYW1vdW50VG9XaXRoZHJhdzsKICAgICAgICAvLyBzZW5kIFZJVEUgdG8gbXNnLnNlbmRlcgogICAgICAgIHBheWFibGUobXNnLnNlbmRlcikudHJhbnNmZXIoVklURV9UT0tFTiwgYW1vdW50VG9XaXRoZHJhdyk7CgogICAgICAgIGVtaXQgV2l0aGRyYXcoYW1vdW50VG9XaXRoZHJhdywgX3JlcGF5QW1vdW50KTsKICAgIH0KICAgIAogICAgLy8vIEBub3RpY2UgUmV0dXJucyBhbiBlc3RpbWF0ZSBvZiBob3cgbXVjaCBjb2xsYXRlcmFsIFZJVEUgY291bGQgYmUgd2l0aGRyYXduIGZvciBhIGdpdmVuIGFtb3VudCBvZiBWVVNECiAgICAvLy8gQHBhcmFtIF9yZXBheUFtb3VudCAgdGhlIGFtb3VudCBvZiBWVVNEIHRoYXQgd291bGQgYmUgcmVwYWlkCiAgICAvLy8gQHJldHVybiB3aXRoZHJhd0Ftb3VudCB0aGUgZXN0aW1hdGVkIGFtb3VudCBvZiBhIHZhdWx0J3MgY29sbGF0ZXJhbCBWSVRFIHRoYXQgd291bGQgYmUgcmV0dXJuZWQgCiAgICBmdW5jdGlvbiBnZXRXaXRoZHJhd0Ftb3VudCh1aW50MjU2IF9yZXBheUFtb3VudCkgb3ZlcnJpZGUgdmlldyBwdWJsaWMgcmV0dXJucyh1aW50MjU2IHdpdGhkcmF3QW1vdW50KSB7CiAgICAgICAgLy8gZ2V0IHByaWNlIGZyb20gb3JhY2xlCiAgICAgICAgKHVpbnQyNTYgcHJpY2UsIHVpbnQ4IGRlY2ltYWxzKSA9IGF3YWl0IG9yYWNsZS5nZXRMYXRlc3RQcmljZSgpOwogICAgICAgIHJldHVybiBfcmVwYXlBbW91bnQgKiAxMCoqKFZJVEVfREVDSU1BTFMgKyBkZWNpbWFscykgLyAocHJpY2UgKiAxMCoqVlVTRF9ERUNJTUFMUyk7CiAgICB9CiAgICAKICAgIC8qKgogICAgICogQG5vdGljZSBSZXR1cm5zIGFuIGVzdGltYXRlIG9uIGhvdyBtdWNoIFZVU0QgY291bGQgYmUgbWludGVkIGF0IHRoZSBjdXJyZW50IHJhdGUKICAgICAqIEBwYXJhbSBfZGVwb3NpdEFtb3VudCB0aGUgYW1vdW50IG9mIFZJVEUgdGhhdCB3b3VsZCBiZSBkZXBvc2l0ZWQKICAgICAqIEByZXR1cm4gbWludEFtb3VudCAgdGhlIGVzdGltYXRlZCBhbW91bnQgb2YgVlVTRCB0aGF0IHdvdWxkIGJlIG1pbnRlZAogICAgICovCiAgICBmdW5jdGlvbiBnZXRNaW50QW1vdW50KHVpbnQyNTYgX2RlcG9zaXRBbW91bnQpIG92ZXJyaWRlIHZpZXcgcHVibGljIHJldHVybnModWludDI1NiBtaW50QW1vdW50KSB7CiAgICAgICAgKHVpbnQyNTYgcHJpY2UsIHVpbnQ4IGRlY2ltYWxzKSA9IGF3YWl0IG9yYWNsZS5nZXRMYXRlc3RQcmljZSgpOwogICAgICAgIC8vIGdldCBwcmljZSBmcm9tIG9yYWNsZQogICAgICAgIHJldHVybiBfZGVwb3NpdEFtb3VudCAqIHByaWNlICogMTAqKlZVU0RfREVDSU1BTFMgLyAxMCoqKFZJVEVfREVDSU1BTFMgKyBkZWNpbWFscyk7CiAgICB9Cn0K"}}),t._v(" "),c("p",[t._v("The contract inherits "),c("code",[t._v("Vault.solpp")]),t._v(" and "),c("code",[t._v("openzeppelin/access/Ownable.sol")]),t._v(". As an abstract contract, "),c("code",[t._v("Vault.solpp")]),t._v(" defines the base functions and the data structure of the vault. "),c("code",[t._v("Ownable.sol")]),t._v(" is a standard OpenZeppelin contract of Solidity, which is imported into the collateral contract without change. The contract also declares two interface fields "),c("code",[t._v("IOracle.solpp")]),t._v(" and "),c("code",[t._v("ITokenMinter.solpp")]),t._v(", corresponding to a price oracle and a token minter - they will be instantiated during deployment. When the contract is in actual use, the token minter should be the Vite's token issuance contract, and the oracle is assigned with the contract address of "),c("code",[t._v("TokenPriceOracle.solpp")]),t._v(". We simply replace with "),c("code",[t._v("MockOracle.solpp")]),t._v(" and "),c("code",[t._v("MockTokenMinter.solpp")]),t._v(" in our example for demo purpose and testing.")]),t._v(" "),c("p",[c("code",[t._v("MockOracle.solpp")]),t._v(" returns a fixed price, and "),c("code",[t._v("MockTokenMinter.solpp")]),t._v(" maintains an amount of pre-minted VUSD tokens and sends to certain address when it is called.")]),t._v(" "),c("p",[t._v("The contract's directory structure is as below.")]),t._v(" "),c("br"),t._v(" "),c("div",{staticStyle:{height:"15em",display:"flex","justify-content":"space-between"}},[c("div",{staticStyle:{float:"left",height:"100%",margin:"0 auto","text-align":"center","box-shadow":"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)"}},[c("img",{staticStyle:{"max-height":"100%","max-width":"100%",display:"block",margin:"0",width:"auto",height:"auto"},attrs:{src:l(572)}}),c("br"),t._v("Contract directory structure")])]),t._v(" "),c("br"),c("br"),c("br"),t._v(" "),c("h2",{attrs:{id:"using-solidity-code"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#using-solidity-code"}},[t._v("#")]),t._v(" Using Solidity Code")]),t._v(" "),c("p",[t._v('Most Solidity code can be directly used in Solidity++ without any change. This also applies to most contracts in OpenZeppelin library except the "ERCxxx" token contracts in Ethereum. In the example, CollateralVault extends '),c("code",[t._v("Ownable.sol")]),t._v(" so that the "),c("code",[t._v("onlyOwner")]),t._v(" modifier can be used in the contract. "),c("code",[t._v("Ownable.sol")]),t._v(" is an standard OpenZeppelin contract written in Solidity.")]),t._v(" "),c("div",{staticClass:"custom-block tip"},[c("p",[t._v('Vite implements a native token issuance model. Issuing or minting a new token doesn\'t need a "Token Contract" as in Ethereum.')])]),t._v(" "),c("tm-code-block",{staticClass:"codeblock",attrs:{language:"solidity",base64:"Ly8vIEBub3RpY2UgQWxsb3dzIHRoZSBvd25lciB0byBzZXQgYSBuZXcgb3JhY2xlCi8vLyBAcGFyYW0gX29yYWNsZUFkZHJlc3MgVGhlIG5ldyBwcmljZSBvcmFjbGUgY29udHJhY3QgdG8gYmUgc2V0CmZ1bmN0aW9uIHNldE9yYWNsZShhZGRyZXNzIF9vcmFjbGVBZGRyZXNzKSBwdWJsaWMgb25seU93bmVyIHsKICAgIG9yYWNsZSA9IElPcmFjbGUoX29yYWNsZUFkZHJlc3MpOwp9Cg=="}}),t._v(" "),c("h2",{attrs:{id:"how-to-transfer-tokens"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#how-to-transfer-tokens"}},[t._v("#")]),t._v(" How to Transfer Tokens")]),t._v(" "),c("p",[t._v("In the example, the contract sends an amount of "),c("code",[t._v("amountToWithdraw")]),t._v(" VITE tokens to "),c("code",[t._v("msg.sender")]),t._v(", which is the caller of the "),c("code",[t._v("withdraw")]),t._v(" function. "),c("code",[t._v("msg.sender")]),t._v(" must be "),c("code",[t._v("payable")]),t._v(" in order to receive funds.")]),t._v(" "),c("tm-code-block",{staticClass:"codeblock",attrs:{language:"solidity",base64:"Ly8gc2VuZCBWSVRFIGNvbGxhdGVyYWwgdG8gbXNnLnNlbmRlcgpwYXlhYmxlKG1zZy5zZW5kZXIpLnRyYW5zZmVyKFZJVEVfVE9LRU4sIGFtb3VudFRvV2l0aGRyYXcpOwo="}}),t._v(" "),c("blockquote",[c("p",[t._v("Note: The syntax of sending token to another address is "),c("code",[t._v("address.transfer(_tti, _amount)")])])]),t._v(" "),c("h2",{attrs:{id:"using-implicit-receive-function"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#using-implicit-receive-function"}},[t._v("#")]),t._v(" Using Implicit Receive Function")]),t._v(" "),c("p",[c("code",[t._v("MockedTokenMinter.solpp")]),t._v(" has defined a default (implicit) receive function, which allows others send tokens to the contract. Note that the receive function doesn't have any parameters and must be declared as "),c("code",[t._v("payable")]),t._v(".")]),t._v(" "),c("blockquote",[c("p",[t._v("Note: Solidity++ contract doesn't have a default receive function. The contract cannot receive transactions - any token sent to the contract will be returned. Always add the receive function if your contract needs to receive tokens.")])]),t._v(" "),c("tm-code-block",{staticClass:"codeblock",attrs:{language:"solidity",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVAovLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUCnByYWdtYSBzb2xpZGl0eXBwICZndDs9MC44LjA7CgppbXBvcnQgJnF1b3Q7Li9pbnRlcmZhY2UvSVRva2VuTWludGVyLnNvbHBwJnF1b3Q7OwoKY29udHJhY3QgTW9ja2VkVG9rZW5NaW50ZXIgaXMgSVRva2VuTWludGVyIHsKCiAgICB2aXRldG9rZW4gY29uc3RhbnQgVlVTRCA9ICZxdW90O3R0aV84MGYzNzUxNDg1ZTRlODM0NTYwNTk0NzMmcXVvdDs7CgogICAgLy8vIGltcGxpY2l0IHJlY2VpdmUgZnVuY3Rpb24KICAgIHJlY2VpdmUoKSBleHRlcm5hbCBwYXlhYmxlIHsKICAgICAgICByZXF1aXJlKFZVU0QgPT0gbXNnLnRva2VuKTsKICAgIH0KCiAgICAvLy8gQG5vdGljZSBNaW50IGEgZ2l2ZW4gYW1vdW50IG9mIHRva2VuIGFuZCBzZW5kIHRvIHRoZSByZWNpZXZlIGFkZHJlc3MKICAgIC8vLyBAZGV2IEluc3RlYWQgb2YgYWN0dWFsbHkgbWludCB0aGUgdG9rZW4gdXBvbiByZXF1ZXN0LCB0aGUgdG9rZW5zIHdpbGwgYmUgcHJlLW1pbnRlZCBhbmQgc3RvcmVkIGluIHRoaXMgbW9jawogICAgLy8vIEBwYXJhbSB0b2tlbklkIFRoZSB0b2tlbiB0byBiZSBtaW50ZWQKICAgIC8vLyBAcGFyYW0gYW1vdW50IFRoZSB0b2tlbiBhbW91bnQgdG8gYmUgbWludGVkCiAgICAvLy8gQHBhcmFtIHJlY2VpdmVBZGRyZXNzIFRoZSByZWNpcGllbnQgYWRkcmVzcyB3aGljaCB0aGUgbWludGVkIHRva2VuIHdpbGwgYmUgc2VudCB0bwogICAgZnVuY3Rpb24gUmVJc3N1ZSh2aXRldG9rZW4gdG9rZW5JZCwgdWludDI1NiBhbW91bnQsIGFkZHJlc3MgcGF5YWJsZSByZWNlaXZlQWRkcmVzcykgb3ZlcnJpZGUgZXh0ZXJuYWwgewogICAgICAgIHJlcXVpcmUoYmFsYW5jZShWVVNEKSAmZ3Q7PSBhbW91bnQpOwogICAgICAgIHJlcXVpcmUoVlVTRCA9PSB0b2tlbklkKTsKICAgICAgICAvLyB0cmFuc2ZlciB0b2tlbiB0byB0aGUgcmVjZWl2ZSBhZGRyZXNzCiAgICAgICAgcmVjZWl2ZUFkZHJlc3MudHJhbnNmZXIodG9rZW5JZCwgYW1vdW50KTsKICAgICAgICBlbWl0IE1pbnRlZCh0b2tlbklkLCBhbW91bnQpOwogICAgfQoKICAgIC8vLyBAbm90aWNlIEJ1cm4gdG9rZW4KICAgIC8vLyBAZGV2IEluc3RlYWQgb2YgYWN1dGFsbHkgYnVybiB0aGUgdG9rZW4sIHRoZSB0b2tlbnMgc2VudCB3aXRoIHRoaXMgZnVuY3Rpb24gd2lsbCBiZSBzdG9yZWQgaW4gdGhpcyBtb2NrCiAgICBmdW5jdGlvbiBCdXJuKCkgb3ZlcnJpZGUgcGF5YWJsZSBleHRlcm5hbCB7CiAgICAgICAgcmVxdWlyZShWVVNEID09IG1zZy50b2tlbik7CiAgICAgICAgZW1pdCBCdXJuZWQobXNnLnRva2VuLCBtc2cudmFsdWUpOwogICAgfQp9Cg=="}}),t._v(" "),c("h2",{attrs:{id:"how-to-call-another-contract"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#how-to-call-another-contract"}},[t._v("#")]),t._v(" How to Call Another Contract")]),t._v(" "),c("p",[c("code",[t._v("CollateralVault")]),t._v(" calls the price oracle contract to obtain the current price. For example, "),c("code",[t._v("await oracle.getLatestPrice()")]),t._v(" calls the "),c("code",[t._v("getLatestPrice()")]),t._v(" function on the oracle and returns the price. The "),c("code",[t._v("await")]),t._v(" operator indicates the call is synchronous. The execution will pause until the price is returned from the oracle.")]),t._v(" "),c("div",{staticClass:"custom-block warning"},[c("p",{staticClass:"custom-block-title"},[t._v("Await operator and Solidity")]),t._v(" "),c("p",[t._v("The "),c("code",[t._v("await")]),t._v(" operator is introduced in Solidity++ v0.8.1. It is a powerful tool that makes synchronous-like calls on Vite possible. Basically, it behaves similarly to a function call in Ethereum, and gives the same execution result. However, due to the asynchronous nature of Vite, in some execution context it might give unexpected results (compared to that in Ethereum). We will explain these pitfalls in the next chapter.")])]),t._v(" "),c("tm-code-block",{staticClass:"codeblock",attrs:{language:"solidity",base64:"ZnVuY3Rpb24gZ2V0TWludEFtb3VudCh1aW50MjU2IF9kZXBvc2l0QW1vdW50KSB2aWV3IG92ZXJyaWRlIHJldHVybnModWludDI1NiBtaW50QW1vdW50KSB7CiAgICAvLyBnZXQgcHJpY2UgZnJvbSBvcmFjbGUKICAgICh1aW50MjU2IHByaWNlLCB1aW50OCBkZWNpbWFscykgPSBhd2FpdCBvcmFjbGUuZ2V0TGF0ZXN0UHJpY2UoKTsKICAgIHJldHVybiBfZGVwb3NpdEFtb3VudCAqIHByaWNlICogMTAqKlZVU0RfREVDSU1BTFMgLyAxMCoqKFZJVEVfREVDSU1BTFMgKyBkZWNpbWFscyk7Cn0K"}}),t._v(" "),c("p",[t._v("Before the "),c("code",[t._v("await")]),t._v(" operator is introduced, all the contract call on Vite is asynchronous. They will return immediately and the Vite VM will start execute the next line of code. In the example, if we remove "),c("code",[t._v("await")]),t._v(", "),c("code",[t._v("oracle.getLatestPrice()")]),t._v(" will become an async call, and the next line "),c("code",[t._v("return _depositAmount * price * 10**VUSD_DECIMALS / 10**(VITE_DECIMALS + decimals)")]),t._v(" will start to run with an invalid price (apparently not the expected behavior for our example).")]),t._v(" "),c("blockquote",[c("p",[t._v("Note: The syntax of calling another contract is "),c("code",[t._v("contract.f(_params)")]),t._v(". If you want to make it synchronous, simply adding "),c("code",[t._v("await")]),t._v(" ahead, i.e. "),c("code",[t._v("await contract.f(_params)")]),t._v(".")])]),t._v(" "),c("h2",{attrs:{id:"how-to-transfer-tokens-when-calling-another-contract"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#how-to-transfer-tokens-when-calling-another-contract"}},[t._v("#")]),t._v(" How to Transfer Tokens when Calling Another Contract")]),t._v(" "),c("p",[t._v("After received VUSD repayment, the "),c("code",[t._v("withdraw")]),t._v(" function burns the tokens by calling "),c("code",[t._v("await tm.Burn{token: STABLE_TOKEN, value: _repayAmount}()")]),t._v(". This calls the "),c("code",[t._v("Burn")]),t._v(" function on TokenMinter contract and sends the tokens for burning.")]),t._v(" "),c("blockquote",[c("p",[t._v("Note: The syntax is "),c("code",[t._v("contract.f{token: _vitetoken, value: _amount}(_params)")]),t._v(". The function must be "),c("code",[t._v("payable")]),t._v(".")])]),t._v(" "),c("h2",{attrs:{id:"using-libraries-openzeppelin"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#using-libraries-openzeppelin"}},[t._v("#")]),t._v(" Using Libraries(OpenZeppelin)")]),t._v(" "),c("p",[t._v("Using OpenZeppelin library is also possible in Solidity++. Let us modify the "),c("code",[t._v("CollateralVault.solpp")]),t._v(" contract to use the library "),c("code",[t._v("SafeMath.sol")]),t._v(".")]),t._v(" "),c("p",[t._v("Same as what need to be done in Solidity, We add an new import and declare to use the library in the contract.")]),t._v(" "),c("tm-code-block",{staticClass:"codeblock",attrs:{language:"solidity",base64:"Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVApwcmFnbWEgc29saWRpdHlwcCAmZ3Q7PTAuOC4wOwoKaW1wb3J0ICZxdW90Oy4vaW50ZXJmYWNlL1ZhdWx0LnNvbHBwJnF1b3Q7OwppbXBvcnQgJnF1b3Q7Li9pbnRlcmZhY2UvSVRva2VuTWludGVyLnNvbHBwJnF1b3Q7OwppbXBvcnQgJnF1b3Q7Li9Nb2NrT3JhY2xlLnNvbHBwJnF1b3Q7OwppbXBvcnQgJnF1b3Q7Li4vb3BlbnplcHBlbGluL2FjY2Vzcy9Pd25hYmxlLnNvbCZxdW90OzsKaW1wb3J0ICZxdW90Oy4uL29wZW56ZXBwZWxpbi91dGlscy9tYXRoL1NhZmVNYXRoLnNvbCZxdW90OzsKCmNvbnRyYWN0IENvbGxhdGVyYWxWYXVsdCBpcyBWYXVsdCwgT3duYWJsZSB7CgogICAgdXNpbmcgU2FmZU1hdGggZm9yIHVpbnQ7CiAgICAKICAgIC8vIG90aGVyIGNvZGUgb2YgdGhlIGNvbnRyYWN0Li4uCgogICAgZnVuY3Rpb24gZ2V0TWludEFtb3VudCh1aW50MjU2IF9kZXBvc2l0QW1vdW50KSB2aWV3IG92ZXJyaWRlIHJldHVybnModWludDI1NiBtaW50QW1vdW50KSB7CiAgICAgICAgKHVpbnQyNTYgcHJpY2UsIHVpbnQ4IGRlY2ltYWxzKSA9IGF3YWl0IG9yYWNsZS5nZXRMYXRlc3RQcmljZSgpOwogICAgICAgIC8vIGdldCBwcmljZSBmcm9tIG9yYWNsZQogICAgICAgIHJldHVybiBfZGVwb3NpdEFtb3VudC5tdWwocHJpY2UpLm11bCgxMCoqVlVTRF9ERUNJTUFMUykuZGl2KDEwKiooVklURV9ERUNJTUFMUy5hZGQoZGVjaW1hbHMpKSk7CiAgICB9Cn0K"}}),t._v(" "),c("p",[t._v("We modified "),c("code",[t._v("getMintAmount(uint256 _depositAmount)")]),t._v(" by replacing the original math operations with functions provided in the library.")])],1)}),[],!1,null,null,null);e.default=a.exports}}]);